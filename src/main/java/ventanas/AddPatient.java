/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import system.DataBase;
import java.awt.event.*;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import javax.swing.JOptionPane;
import misclases.*;

/**
 *
 * @author Asus
 */
public class AddPatient extends javax.swing.JFrame {
   DataBase db = new DataBase();
   Connection conexion = db.getConnected();
   private final ArrayList<String> lista = new ArrayList<>(); 
   final private LinkedHashMap<String, Servicio> servicesList = new LinkedHashMap<>();
   final private LinkedHashMap<String, Mascota> petsList = new LinkedHashMap<>();
   final private int ownerId;
   static Menu principal = null;
    /**
     * Creates new form AddPatient
     * @param ventana
     */
    public AddPatient(Menu ventana, int id) {
        initComponents();
        setLocationRelativeTo(null);
        ownerId = id;
        principal = ventana;
        fillBoxes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        petsBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        servicesBox = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        txtServicios = new javax.swing.JLabel();
        btnConfirmed = new javax.swing.JButton();
        btnCancelled = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel1.setText("Datos para la consulta");

        jLabel2.setText("Mascota");

        petsBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                petsBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("Lista de servicios");

        servicesBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                servicesBoxItemStateChanged(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Servicios seleccionados"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(txtServicios, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtServicios, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
        );

        btnConfirmed.setText("Confirmar");
        btnConfirmed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmedActionPerformed(evt);
            }
        });

        btnCancelled.setText("Cancelar");
        btnCancelled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelledActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(petsBox, 0, 148, Short.MAX_VALUE)
                            .addComponent(servicesBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelled)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConfirmed, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(petsBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(servicesBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCancelled)
                        .addComponent(btnConfirmed))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void petsBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_petsBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_petsBoxActionPerformed

    private void btnConfirmedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmedActionPerformed
        // TODO add your handling code here:
        String mascota = petsBox.getSelectedItem().toString();
        if (mascota.equals("Ninguno")){
            JOptionPane.showMessageDialog(this, "Debes seleccionar una mascota");
        } else {
           
            if (principal.petExists(mascota)){
                JOptionPane.showMessageDialog(this, "La mascota seleccionada ya ha sido agregada.");
            } else {
            this.setVisible(false);
            this.dispose();
            principal.addMascota(petsList.get(mascota));
            Servicio[] allServices = new Servicio[lista.size()];
            for (int i = 0; i < lista.size(); i++) {
                allServices[i] = servicesList.get(lista.get(i));
             
                }
            principal.setContinue(true);
            principal.addServices(allServices);
            principal.updateTable();
            principal.setVisible(true);
            }
           
        }
        
        
    }//GEN-LAST:event_btnConfirmedActionPerformed

    private void btnCancelledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelledActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_btnCancelledActionPerformed

    private void servicesBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_servicesBoxItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
             if (evt.getItem() != "Ninguno"){
                if (lista.contains(evt.getItem().toString())) {
                    lista.remove(evt.getItem().toString());
                 } else {
                     lista.add(evt.getItem().toString());
                 }
                String texto = "<html>";
                for (String e : lista) {
                 texto+=  e+ "<br>";
                }
                texto+= "</html>";
             
                txtServicios.setText(texto);
             }
        }
        
    }//GEN-LAST:event_servicesBoxItemStateChanged

    private void fillBoxes(){
        petsBox.addItem("Ninguno");
        servicesBox.addItem("Ninguno");
        
        
        String sql = "SELECT m.* FROM mascota m INNER JOIN pet_and_owner p ON m.mascotaId = p.pet WHERE p.owner = ?";
        try {
            PreparedStatement st = conexion.prepareStatement(sql);
            st.setInt(1, ownerId);
            ResultSet rs = st.executeQuery();
            while (rs.next()) {
                
                Mascota m = new Mascota();
                 String petName= rs.getString("nombre");
                 m.setPetId(rs.getInt("mascotaId"));
                 m.setNombre(petName);
                 m.setEspecie(rs.getString("especie"));
                 m.setRaza(rs.getString("raza"));
                 m.setEdad(rs.getString("edad"));
                 m.setPeso(rs.getFloat("peso"));
                 m.setSexo(rs.getString("sexo"));
                 m.setEstatus(rs.getString("estatus"));
                petsList.put(petName, m);
                petsBox.addItem(petName );
            }
        }catch (SQLException e){
            System.out.println("Hubo un error para consultar los datos: " + e);
        }
        
        String script = "select * from servicio";
        try {
            Statement st = conexion.createStatement();
            ResultSet rs = st.executeQuery( script);
            while (rs.next()) {
                Servicio s = new Servicio();
                String serviceName = rs.getString("tipo");
                s.setTipo(serviceName);
                s.setPrecio(rs.getFloat("precio"));
                s.setServiceId(rs.getInt("servicioId"));
                servicesList.put(serviceName, s);
                servicesBox.addItem(serviceName);
               
            }
        }catch (SQLException e){
            System.out.println("Hubo un error para consultar los datos: " + e);
        }
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(AddPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(AddPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(AddPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(AddPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddPatient(principal).setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelled;
    private javax.swing.JButton btnConfirmed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> petsBox;
    private javax.swing.JComboBox<String> servicesBox;
    private javax.swing.JLabel txtServicios;
    // End of variables declaration//GEN-END:variables
}
