
package ventanas;

import java.sql.Connection;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import system.DataBase;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import misclases.Servicio;

/**
 *
 * @author Asus
 */
public class ServicesManagement extends javax.swing.JFrame {
   DataBase db = new DataBase();
   Connection conexion = db.getConnected();
   DefaultTableModel modelo;
   int xMouse, yMouse;
   Servicio service = null;

    public ServicesManagement() {
        initComponents();
        setLocationRelativeTo(null);
        query();
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        inputID = new javax.swing.JTextField();
        inputType = new javax.swing.JTextField();
        inputPrice = new javax.swing.JTextField();
        registerButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        addData = new javax.swing.JButton();
        editData = new javax.swing.JButton();
        deletData = new javax.swing.JButton();
        showData = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        goClients = new javax.swing.JButton();
        goEmployees = new javax.swing.JButton();
        goServices = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel1.setText("Administracion de servicios");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(303, 41, -1, 37));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));

        jLabel2.setText("Servicio:");

        jLabel3.setText("Costo:");

        jLabel6.setText("ID:");

        inputID.setEditable(false);

        inputType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTypeActionPerformed(evt);
            }
        });

        inputPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPriceActionPerformed(evt);
            }
        });

        registerButton.setText("Registrar");
        registerButton.setEnabled(false);
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(inputID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputType, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(384, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(registerButton)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(inputType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(inputPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(registerButton)
                .addContainerGap())
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 720, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Operaciones"));

        addData.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        addData.setText("Agregar");
        addData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDataActionPerformed(evt);
            }
        });

        editData.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        editData.setText("Modificar");
        editData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDataActionPerformed(evt);
            }
        });

        deletData.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        deletData.setText("Eliminar");
        deletData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletDataActionPerformed(evt);
            }
        });

        showData.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        showData.setText("Mostrar Datos");
        showData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(addData, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(editData, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(deletData, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(showData, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addData, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editData, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deletData, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showData, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 408, -1, -1));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Servicios"));

        Tabla.setBorder(null);
        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ServicioId", "Servicio", "Costo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaMouseClicked(evt);
            }
        });
        Tabla.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                TablaPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 577, -1, 212));

        jPanel1.setBackground(new java.awt.Color(102, 0, 204));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(255, 51, 51));
        jButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Salir");
        jButton1.setFocusPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 0, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel5.setBackground(new java.awt.Color(102, 102, 255));

        goClients.setText("Clientes");
        goClients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goClientsActionPerformed(evt);
            }
        });

        goEmployees.setText("Empleados");
        goEmployees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goEmployeesActionPerformed(evt);
            }
        });

        goServices.setText("Servicios");
        goServices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goServicesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(goEmployees, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                    .addComponent(goClients, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(goServices, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 7, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(goEmployees, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goClients, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goServices, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(495, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 120, 789));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTypeActionPerformed

    private void inputPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputPriceActionPerformed

    private void editDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDataActionPerformed
        // TODO add your handling code here:
        
        registerButton.setEnabled(false);
        modify();
        query();
    }//GEN-LAST:event_editDataActionPerformed

    private void showDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDataActionPerformed
        // TODO add your handling code here:
        registerButton.setEnabled(false);
         int fila = Tabla.getSelectedRow();
        
        if (fila == -1 || inputID.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "No se ha seleccionado un servicio.");
        } else {
        String consulta = "select * from servicio where servicioId=?";
        try {
    PreparedStatement ps = conexion.prepareStatement(consulta);
    ps.setInt(1, Integer.parseInt(inputID.getText()));
    ResultSet res = ps.executeQuery();
    if (res.next()){
        
            service = new Servicio();
            service.setServiceId(res.getInt("servicioId"));
            service.setTipo(res.getString("tipo"));
            service.setPrecio(res.getFloat("precio"));
            
         
            JOptionPane.showMessageDialog(this, service.showData());
                 
            }
        } catch(SQLException err) {
            System.out.println("Hubo un error para consultar los datos: " + err);
        }
       }
    }//GEN-LAST:event_showDataActionPerformed

    private void addDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDataActionPerformed
        // TODO add your handling code here:
        clearInputs();
        registerButton.setEnabled(true);
        inputID.setEditable(false);

    }//GEN-LAST:event_addDataActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        // TODO add your handling code here:
        addData();
        query();
    }//GEN-LAST:event_registerButtonActionPerformed

    private void deletDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletDataActionPerformed
        // TODO add your handling code here:
        registerButton.setEnabled(false);
        deleteData();
        query();
    }//GEN-LAST:event_deletDataActionPerformed

    private void TablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMouseClicked
        // TODO add your handling code here:
        registerButton.setEnabled(false);
        int fila = Tabla.getSelectedRow();
        
         if (fila == -1){
            JOptionPane.showMessageDialog(this, "No se encontro la fila.");
        } else {
            
            int servicioId = Integer.parseInt(String.valueOf(Tabla.getValueAt(fila, 0)));
//            Tabla.setCellSelectionEnabled(true);
//            String nom = (String) Tabla.getValueAt(fila, 1);
//            String ape = (String) Tabla.getValueAt(fila, 2);
//            String puestoE = (String) Tabla.getValueAt(fila, 3);
            
            String sql = "select * from servicio where servicioId=?";
            try {
            PreparedStatement ps = conexion.prepareStatement(sql);
            ps.setInt(1, servicioId);
            ResultSet rs = ps.executeQuery();
            
            if (rs.next()){
                 inputID.setText(""+servicioId);
                 inputType.setText(rs.getString("tipo"));
                 inputPrice.setText(""+rs.getFloat("precio"));
                
            }
           
        }catch (SQLException e){
            System.out.println("Hubo un error para consultar los datos en la tabla: " + e);
        }
           
            
        }
    }//GEN-LAST:event_TablaMouseClicked

    private void TablaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_TablaPropertyChange
        // TODO add your handling code here:
    
    }//GEN-LAST:event_TablaPropertyChange

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        // TODO add your handling code here:
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y- yMouse);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void goClientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goClientsActionPerformed
        // TODO add your handling code here:
        ClientManagement cm = new ClientManagement();
        cm.setVisible(true);
        cm.pack();
        this.dispose();
    }//GEN-LAST:event_goClientsActionPerformed

    private void goEmployeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goEmployeesActionPerformed
        // TODO add your handling code here:
        EmployeeManagement em = new EmployeeManagement();
        em.setVisible(true);
        em.pack();
        this.dispose();
    }//GEN-LAST:event_goEmployeesActionPerformed

    private void goServicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goServicesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_goServicesActionPerformed

    private void addData(){
        Map<String, String> lista = new LinkedHashMap<>();
        String errorMessage = "";
        
        lista.put("Servicio", inputType.getText());
        lista.put("Precio", inputPrice.getText());
       
        
        for (Map.Entry<String, String> entry : lista.entrySet()) {
            if (entry.getValue().isEmpty()) {
                errorMessage += entry.getKey() + ", ";
            }
        }
        
                 int lastIndex = errorMessage.lastIndexOf(",");
        if (lastIndex >= 0) {
            errorMessage = errorMessage.substring(0, lastIndex) + "." + errorMessage.substring(lastIndex + 1);
        }
        if (!errorMessage.isEmpty()){
            JOptionPane.showMessageDialog(this, "Los siguientes campos deben ser completados: " + errorMessage);
        } else {
            service = new Servicio(); 
                    if (service.setPrecio(inputPrice.getText())){
                        
                        db.insertServiceData(lista);
                    } else {
                         JOptionPane.showMessageDialog(this, "El precio debe ser numerico");
                    }
          
//                db.insertEmployeeData(lista);
        }
        
        clearTable();
        clearInputs();
    }
    
    private void query(){
        String sql = "select * from servicio";
        try {
            Statement st = conexion.createStatement();
            ResultSet rs = st.executeQuery(sql);
            Object[] empleado = new Object[3];
            modelo = (DefaultTableModel) Tabla.getModel();
            
            while(rs.next()){
                empleado [0] = rs.getInt("servicioId");
                empleado [1] = rs.getString("tipo");
                empleado [2] = rs.getString("precio");
               
                
                modelo.addRow(empleado);
                
            }
            Tabla.setModel(modelo);
        }catch (SQLException e){
            System.out.println("Hubo un error para consultar los datos: " + e);
        }
    }
    
    private void modify(){
         int fila = Tabla.getSelectedRow();
        
        if (fila == -1 || inputID.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "No se ha seleccionado un empleado.");
        } else {
        Map<String, String> lista = new LinkedHashMap<>();
        String errorMessage = "";
        
        lista.put("Servicio", inputType.getText());
        lista.put("Precio", inputPrice.getText());
        
        for (Map.Entry<String, String> entry : lista.entrySet()) {
            if (entry.getValue().isEmpty()) {
                errorMessage += entry.getKey() + ", ";
            }
        }
        
                 int lastIndex = errorMessage.lastIndexOf(",");
        if (lastIndex >= 0) {
            errorMessage = errorMessage.substring(0, lastIndex) + "." + errorMessage.substring(lastIndex + 1);
        }
        if (!errorMessage.isEmpty()){
            JOptionPane.showMessageDialog(this, "Los siguientes campos no pueden estar vacios: " + errorMessage);
        } else {
           
             service = new Servicio(); 
                    if (service.setPrecio(inputPrice.getText())){
                        
                        db.editServiceData(lista, Integer.parseInt(inputID.getText()));
                    } else {
                         JOptionPane.showMessageDialog(this, "El precio debe ser numerico");
                    }
             
        }
       }
        
        clearTable();
        clearInputs();
    }
    
    private void deleteData(){
        int fila = Tabla.getSelectedRow();
        
        if (fila == -1 || inputID.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "No se ha seleccionado un empleado.");
        } else {
       String sql = "delete from servicio where servicioId=?";
       int r = 0;
       try{
                PreparedStatement ps = conexion.prepareStatement(sql);
                ps.setInt(1, Integer.parseInt(inputID.getText()));
                r = ps.executeUpdate();
                 
                if(r != 0 ){
                    JOptionPane.showMessageDialog(this, "¡Se eliminaron los datos correctamente!");
                }
                    
            } catch (SQLException err) {
                
                System.out.println("Hubo un error al eliminar datos en la tabla cliente: " + err);
                
            }
        }
      
        clearTable();
        clearInputs();
    }
    
    private void clearTable(){
        while (Tabla.getRowCount() > 0){
        modelo.removeRow(0);
        }
    }
    
    
    public void clearInputs(){
        inputID.setText("");
        inputType.setText("");
        inputPrice.setText("");

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServicesManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServicesManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServicesManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServicesManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServicesManagement().setVisible(true);
            }
        });
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla;
    private javax.swing.JButton addData;
    private javax.swing.JButton deletData;
    private javax.swing.JButton editData;
    private javax.swing.JButton goClients;
    private javax.swing.JButton goEmployees;
    private javax.swing.JButton goServices;
    private javax.swing.JTextField inputID;
    private javax.swing.JTextField inputPrice;
    private javax.swing.JTextField inputType;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton registerButton;
    private javax.swing.JButton showData;
    // End of variables declaration//GEN-END:variables
}
